DEBUG:root:number of params are 1564090
DEBUG:root:epoch 0, train_loss 1.4087, train_accuracy 48.2685, test_loss 1.1563, test_accuracy 58.6234, cost time 18.7290
DEBUG:root:epoch 1, train_loss 0.9363, train_accuracy 66.6264, test_loss 0.8160, test_accuracy 72.2607, cost time 17.4647
DEBUG:root:epoch 2, train_loss 0.7369, train_accuracy 74.2080, test_loss 0.6959, test_accuracy 75.3956, cost time 17.4602
DEBUG:root:epoch 3, train_loss 0.6229, train_accuracy 78.3140, test_loss 0.6449, test_accuracy 77.7690, cost time 17.4630
DEBUG:root:epoch 4, train_loss 0.5506, train_accuracy 81.0606, test_loss 0.5799, test_accuracy 80.3402, cost time 17.4519
DEBUG:root:epoch 5, train_loss 0.4914, train_accuracy 82.9803, test_loss 0.5274, test_accuracy 82.1203, cost time 17.4434
DEBUG:root:epoch 6, train_loss 0.4470, train_accuracy 84.4198, test_loss 0.4976, test_accuracy 82.9510, cost time 17.4453
DEBUG:root:epoch 7, train_loss 0.4071, train_accuracy 85.8152, test_loss 0.4743, test_accuracy 84.0783, cost time 17.4466
DEBUG:root:epoch 8, train_loss 0.3834, train_accuracy 86.7339, test_loss 0.4539, test_accuracy 84.5530, cost time 17.4529
DEBUG:root:epoch 9, train_loss 0.3495, train_accuracy 87.9252, test_loss 0.4333, test_accuracy 85.1365, cost time 17.4662
DEBUG:root:epoch 10, train_loss 0.3243, train_accuracy 88.7676, test_loss 0.4277, test_accuracy 85.5320, cost time 17.4729
DEBUG:root:epoch 11, train_loss 0.3046, train_accuracy 89.4929, test_loss 0.4370, test_accuracy 85.3738, cost time 17.4791
DEBUG:root:epoch 12, train_loss 0.2889, train_accuracy 90.0887, test_loss 0.3939, test_accuracy 86.7188, cost time 17.4810
DEBUG:root:epoch 13, train_loss 0.2704, train_accuracy 90.5866, test_loss 0.4019, test_accuracy 86.7385, cost time 17.4823
DEBUG:root:epoch 14, train_loss 0.2549, train_accuracy 91.1721, test_loss 0.4231, test_accuracy 85.9869, cost time 17.4901
DEBUG:root:epoch 15, train_loss 0.2447, train_accuracy 91.4570, test_loss 0.3813, test_accuracy 87.5396, cost time 17.4880
DEBUG:root:epoch 16, train_loss 0.2319, train_accuracy 92.0137, test_loss 0.4089, test_accuracy 86.8968, cost time 17.4881
DEBUG:root:epoch 17, train_loss 0.2171, train_accuracy 92.4620, test_loss 0.3609, test_accuracy 88.0538, cost time 17.4886
DEBUG:root:epoch 18, train_loss 0.2056, train_accuracy 92.9779, test_loss 0.3914, test_accuracy 87.1835, cost time 17.4883
DEBUG:root:epoch 19, train_loss 0.1950, train_accuracy 93.1845, test_loss 0.3687, test_accuracy 88.1131, cost time 17.4945
DEBUG:root:epoch 20, train_loss 0.1297, train_accuracy 95.6558, test_loss 0.3236, test_accuracy 89.2603, cost time 17.4912
DEBUG:root:epoch 21, train_loss 0.1103, train_accuracy 96.3743, test_loss 0.3264, test_accuracy 89.4086, cost time 17.4951
DEBUG:root:epoch 22, train_loss 0.1030, train_accuracy 96.5737, test_loss 0.3342, test_accuracy 89.4086, cost time 17.5002
DEBUG:root:epoch 23, train_loss 0.0978, train_accuracy 96.7535, test_loss 0.3269, test_accuracy 89.8932, cost time 17.4966
DEBUG:root:epoch 24, train_loss 0.0910, train_accuracy 96.9761, test_loss 0.3342, test_accuracy 89.9031, cost time 17.4951
DEBUG:root:epoch 25, train_loss 0.0869, train_accuracy 97.1280, test_loss 0.3404, test_accuracy 89.6954, cost time 17.5029
DEBUG:root:epoch 26, train_loss 0.0820, train_accuracy 97.2958, test_loss 0.3412, test_accuracy 89.8240, cost time 17.5057
DEBUG:root:epoch 27, train_loss 0.0772, train_accuracy 97.4972, test_loss 0.3441, test_accuracy 89.6756, cost time 17.5081
DEBUG:root:epoch 28, train_loss 0.0782, train_accuracy 97.3230, test_loss 0.3492, test_accuracy 89.9328, cost time 17.5067
DEBUG:root:epoch 29, train_loss 0.0699, train_accuracy 97.6930, test_loss 0.3569, test_accuracy 89.3493, cost time 17.5108
DEBUG:root:epoch 30, train_loss 0.0672, train_accuracy 97.8057, test_loss 0.3631, test_accuracy 89.6855, cost time 17.5104
DEBUG:root:epoch 31, train_loss 0.0657, train_accuracy 97.8405, test_loss 0.3668, test_accuracy 89.6657, cost time 17.5091
DEBUG:root:epoch 32, train_loss 0.0626, train_accuracy 97.9508, test_loss 0.3609, test_accuracy 89.8833, cost time 17.5003
DEBUG:root:epoch 33, train_loss 0.0603, train_accuracy 97.9959, test_loss 0.3617, test_accuracy 89.8141, cost time 17.5010
DEBUG:root:epoch 34, train_loss 0.0559, train_accuracy 98.1925, test_loss 0.3838, test_accuracy 89.5767, cost time 17.5060
DEBUG:root:epoch 35, train_loss 0.0535, train_accuracy 98.2361, test_loss 0.3912, test_accuracy 88.7955, cost time 17.5079
DEBUG:root:epoch 36, train_loss 0.0519, train_accuracy 98.3152, test_loss 0.3809, test_accuracy 89.6559, cost time 17.5074
DEBUG:root:epoch 37, train_loss 0.0512, train_accuracy 98.3016, test_loss 0.3744, test_accuracy 89.7844, cost time 17.5079
DEBUG:root:epoch 38, train_loss 0.0505, train_accuracy 98.3060, test_loss 0.3748, test_accuracy 89.6855, cost time 17.5105
DEBUG:root:epoch 39, train_loss 0.0467, train_accuracy 98.4671, test_loss 0.3784, test_accuracy 89.8932, cost time 17.5121
DEBUG:root:epoch 40, train_loss 0.0334, train_accuracy 99.0417, test_loss 0.3565, test_accuracy 90.3976, cost time 17.5072
DEBUG:root:epoch 41, train_loss 0.0279, train_accuracy 99.2855, test_loss 0.3622, test_accuracy 90.3085, cost time 17.5020
DEBUG:root:epoch 42, train_loss 0.0263, train_accuracy 99.3167, test_loss 0.3678, test_accuracy 90.4569, cost time 17.5187
DEBUG:root:epoch 43, train_loss 0.0247, train_accuracy 99.3606, test_loss 0.3660, test_accuracy 90.4371, cost time 17.5123
DEBUG:root:epoch 44, train_loss 0.0234, train_accuracy 99.4266, test_loss 0.3715, test_accuracy 90.2690, cost time 17.5169
DEBUG:root:epoch 45, train_loss 0.0224, train_accuracy 99.4473, test_loss 0.3647, test_accuracy 90.4865, cost time 17.5089
DEBUG:root:epoch 46, train_loss 0.0221, train_accuracy 99.4485, test_loss 0.3691, test_accuracy 90.5657, cost time 17.5150
DEBUG:root:epoch 47, train_loss 0.0211, train_accuracy 99.5205, test_loss 0.3772, test_accuracy 90.2591, cost time 17.5138
DEBUG:root:epoch 48, train_loss 0.0214, train_accuracy 99.4513, test_loss 0.3760, test_accuracy 90.4964, cost time 17.5157
DEBUG:root:epoch 49, train_loss 0.0193, train_accuracy 99.5640, test_loss 0.3798, test_accuracy 90.3283, cost time 17.5150
DEBUG:root:epoch 50, train_loss 0.0194, train_accuracy 99.5452, test_loss 0.3799, test_accuracy 90.2492, cost time 17.5133
DEBUG:root:epoch 51, train_loss 0.0190, train_accuracy 99.5404, test_loss 0.3905, test_accuracy 90.1503, cost time 17.5092
DEBUG:root:epoch 52, train_loss 0.0183, train_accuracy 99.6044, test_loss 0.3823, test_accuracy 90.4470, cost time 17.5151
DEBUG:root:epoch 53, train_loss 0.0184, train_accuracy 99.5844, test_loss 0.3877, test_accuracy 90.1701, cost time 17.5167
DEBUG:root:epoch 54, train_loss 0.0182, train_accuracy 99.5944, test_loss 0.3841, test_accuracy 90.3580, cost time 17.5171
DEBUG:root:epoch 55, train_loss 0.0177, train_accuracy 99.5984, test_loss 0.3859, test_accuracy 90.2294, cost time 17.5127
DEBUG:root:epoch 56, train_loss 0.0178, train_accuracy 99.5684, test_loss 0.3882, test_accuracy 90.3382, cost time 17.5088
DEBUG:root:epoch 57, train_loss 0.0170, train_accuracy 99.6244, test_loss 0.3870, test_accuracy 90.2987, cost time 17.5163
DEBUG:root:epoch 58, train_loss 0.0160, train_accuracy 99.6683, test_loss 0.3824, test_accuracy 90.4767, cost time 17.5082
DEBUG:root:epoch 59, train_loss 0.0156, train_accuracy 99.6703, test_loss 0.3816, test_accuracy 90.3976, cost time 17.5129
DEBUG:root:epoch 60, train_loss 0.0145, train_accuracy 99.6951, test_loss 0.3879, test_accuracy 90.1899, cost time 17.5107
DEBUG:root:epoch 61, train_loss 0.0137, train_accuracy 99.7143, test_loss 0.3875, test_accuracy 90.3283, cost time 17.5059
DEBUG:root:epoch 62, train_loss 0.0131, train_accuracy 99.7630, test_loss 0.3860, test_accuracy 90.2492, cost time 17.5072
DEBUG:root:epoch 63, train_loss 0.0130, train_accuracy 99.7582, test_loss 0.3853, test_accuracy 90.2987, cost time 17.5079
DEBUG:root:epoch 64, train_loss 0.0125, train_accuracy 99.7682, test_loss 0.3883, test_accuracy 90.3877, cost time 17.5083
DEBUG:root:epoch 65, train_loss 0.0126, train_accuracy 99.7570, test_loss 0.3871, test_accuracy 90.1701, cost time 17.5082
DEBUG:root:epoch 66, train_loss 0.0126, train_accuracy 99.7702, test_loss 0.3894, test_accuracy 90.1800, cost time 17.5096
DEBUG:root:epoch 67, train_loss 0.0123, train_accuracy 99.7822, test_loss 0.3873, test_accuracy 90.3085, cost time 17.5094
DEBUG:root:epoch 68, train_loss 0.0121, train_accuracy 99.7922, test_loss 0.3895, test_accuracy 90.3580, cost time 17.5186
DEBUG:root:epoch 69, train_loss 0.0118, train_accuracy 99.8082, test_loss 0.3888, test_accuracy 90.3778, cost time 17.5136
DEBUG:root:epoch 70, train_loss 0.0122, train_accuracy 99.7762, test_loss 0.3878, test_accuracy 90.4668, cost time 17.5080
DEBUG:root:epoch 71, train_loss 0.0119, train_accuracy 99.7842, test_loss 0.3889, test_accuracy 90.4668, cost time 17.5130
DEBUG:root:epoch 72, train_loss 0.0125, train_accuracy 99.7602, test_loss 0.3850, test_accuracy 90.5261, cost time 17.5118
DEBUG:root:epoch 73, train_loss 0.0116, train_accuracy 99.8062, test_loss 0.3901, test_accuracy 90.3679, cost time 17.5147
DEBUG:root:epoch 74, train_loss 0.0109, train_accuracy 99.8062, test_loss 0.3868, test_accuracy 90.3877, cost time 17.5142
DEBUG:root:epoch 75, train_loss 0.0115, train_accuracy 99.8022, test_loss 0.3870, test_accuracy 90.3679, cost time 17.5133
DEBUG:root:epoch 76, train_loss 0.0114, train_accuracy 99.7902, test_loss 0.3929, test_accuracy 90.1701, cost time 17.5182
DEBUG:root:epoch 77, train_loss 0.0110, train_accuracy 99.8362, test_loss 0.3913, test_accuracy 90.2591, cost time 17.5158
DEBUG:root:epoch 78, train_loss 0.0113, train_accuracy 99.7962, test_loss 0.3896, test_accuracy 90.2888, cost time 17.5142
DEBUG:root:epoch 79, train_loss 0.0112, train_accuracy 99.8182, test_loss 0.3927, test_accuracy 90.1899, cost time 17.5126
DEBUG:root:epoch 80, train_loss 0.0109, train_accuracy 99.8170, test_loss 0.3926, test_accuracy 90.2690, cost time 17.5187
DEBUG:root:epoch 81, train_loss 0.0104, train_accuracy 99.8382, test_loss 0.3922, test_accuracy 90.2987, cost time 17.5155
DEBUG:root:epoch 82, train_loss 0.0107, train_accuracy 99.8010, test_loss 0.3911, test_accuracy 90.3481, cost time 17.5159
DEBUG:root:epoch 83, train_loss 0.0106, train_accuracy 99.8170, test_loss 0.3921, test_accuracy 90.2789, cost time 17.5151
DEBUG:root:epoch 84, train_loss 0.0103, train_accuracy 99.8429, test_loss 0.3906, test_accuracy 90.3580, cost time 17.5097
DEBUG:root:epoch 85, train_loss 0.0104, train_accuracy 99.8302, test_loss 0.3899, test_accuracy 90.3085, cost time 17.5071
DEBUG:root:epoch 86, train_loss 0.0103, train_accuracy 99.8322, test_loss 0.3913, test_accuracy 90.3184, cost time 17.5086
DEBUG:root:epoch 87, train_loss 0.0103, train_accuracy 99.8401, test_loss 0.3925, test_accuracy 90.3184, cost time 17.5077
DEBUG:root:epoch 88, train_loss 0.0107, train_accuracy 99.8030, test_loss 0.3921, test_accuracy 90.2789, cost time 17.5113
DEBUG:root:epoch 89, train_loss 0.0104, train_accuracy 99.8202, test_loss 0.3927, test_accuracy 90.2690, cost time 17.5080
DEBUG:root:epoch 90, train_loss 0.0103, train_accuracy 99.8461, test_loss 0.3937, test_accuracy 90.2888, cost time 17.5081
DEBUG:root:epoch 91, train_loss 0.0100, train_accuracy 99.8581, test_loss 0.3924, test_accuracy 90.2789, cost time 17.5091
DEBUG:root:epoch 92, train_loss 0.0102, train_accuracy 99.8350, test_loss 0.3934, test_accuracy 90.3382, cost time 17.5091
DEBUG:root:epoch 93, train_loss 0.0097, train_accuracy 99.8421, test_loss 0.3936, test_accuracy 90.3481, cost time 17.5105
DEBUG:root:epoch 94, train_loss 0.0105, train_accuracy 99.8302, test_loss 0.3918, test_accuracy 90.4371, cost time 17.5121
DEBUG:root:epoch 95, train_loss 0.0102, train_accuracy 99.8302, test_loss 0.3920, test_accuracy 90.3778, cost time 17.5088
DEBUG:root:epoch 96, train_loss 0.0104, train_accuracy 99.8421, test_loss 0.3929, test_accuracy 90.3778, cost time 17.5077
DEBUG:root:epoch 97, train_loss 0.0099, train_accuracy 99.8601, test_loss 0.3932, test_accuracy 90.2987, cost time 17.5090
DEBUG:root:epoch 98, train_loss 0.0100, train_accuracy 99.8581, test_loss 0.3932, test_accuracy 90.3778, cost time 17.5104
DEBUG:root:epoch 99, train_loss 0.0104, train_accuracy 99.8362, test_loss 0.3941, test_accuracy 90.3976, cost time 17.5087
DEBUG:root:ResNet(
  (conv1): Conv2d(3, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(48, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(48, 96, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (avg_pool): AvgPool2d(kernel_size=6, stride=6, padding=0)
  (linear): Linear(in_features=192, out_features=10, bias=True)
)
DEBUG:root:train_loss_hist: [1.4087165549892904, 0.9363131340202469, 0.7368700659031149, 0.6228676059514361, 0.5505694860540082, 0.49143587978904507, 0.4469758586581711, 0.40714520536115406, 0.3833587571330693, 0.3494767210520137, 0.32427417801316744, 0.3046356540201875, 0.28890556451457233, 0.27040609845038877, 0.2548678842613764, 0.24468457182426281, 0.23189146656666876, 0.2170599555153676, 0.2055802522298625, 0.19501548849255837, 0.12965546301601794, 0.11025569556504869, 0.10300167641885903, 0.0978027436539264, 0.09096383906500724, 0.08688430965442182, 0.08201924946797473, 0.07720480796873874, 0.07824555773983526, 0.06987041341440986, 0.0671611262814087, 0.06572006404628535, 0.06260656612113004, 0.06034805396062029, 0.05593344861227076, 0.053519820351429916, 0.05185918511627504, 0.051195248063472684, 0.05054342707909663, 0.046686451940480475, 0.03336196904644713, 0.02785016497349381, 0.02633460966365226, 0.024686154313957143, 0.023443622739694994, 0.022383821195663164, 0.022124658581679283, 0.021118239577040267, 0.021376808674153314, 0.01933716209438603, 0.019423804305436665, 0.019046763616168628, 0.018268027825785987, 0.018370104287905843, 0.018158470305478406, 0.017686226772015815, 0.0178174366989909, 0.016995587281685064, 0.015974936609054007, 0.015605432283885948, 0.01454049959133291, 0.013708323066996988, 0.01307224558161386, 0.013007570192089203, 0.012507061189983773, 0.012586129667913861, 0.012619929301821629, 0.012349788280253958, 0.012053164790439256, 0.01184953649378265, 0.012219590178983825, 0.011930812663836953, 0.012481376953611194, 0.0116271534011654, 0.010940441829593056, 0.011542857267900997, 0.011373305596206385, 0.010976204454489148, 0.011334775911008134, 0.011244248904888053, 0.010888466790742467, 0.010377790440347931, 0.010728461910849032, 0.01061591913904566, 0.010330562819214658, 0.010382160475618109, 0.01029514353198316, 0.010295010981080896, 0.010703946407491347, 0.010420065341026657, 0.010282609272924492, 0.009992880869985503, 0.010212786465316363, 0.00967761522094669, 0.010462236676134093, 0.010229659193526487, 0.010419649613873504, 0.009923243551881854, 0.010002379391706832, 0.01038049909618476] 
DEBUG:root:train_acc_hist: [tensor(48.2685, device='cuda:0'), tensor(66.6264, device='cuda:0'), tensor(74.2080, device='cuda:0'), tensor(78.3140, device='cuda:0'), tensor(81.0606, device='cuda:0'), tensor(82.9803, device='cuda:0'), tensor(84.4198, device='cuda:0'), tensor(85.8152, device='cuda:0'), tensor(86.7339, device='cuda:0'), tensor(87.9252, device='cuda:0'), tensor(88.7676, device='cuda:0'), tensor(89.4929, device='cuda:0'), tensor(90.0887, device='cuda:0'), tensor(90.5866, device='cuda:0'), tensor(91.1721, device='cuda:0'), tensor(91.4570, device='cuda:0'), tensor(92.0137, device='cuda:0'), tensor(92.4620, device='cuda:0'), tensor(92.9779, device='cuda:0'), tensor(93.1845, device='cuda:0'), tensor(95.6558, device='cuda:0'), tensor(96.3743, device='cuda:0'), tensor(96.5737, device='cuda:0'), tensor(96.7535, device='cuda:0'), tensor(96.9761, device='cuda:0'), tensor(97.1280, device='cuda:0'), tensor(97.2958, device='cuda:0'), tensor(97.4972, device='cuda:0'), tensor(97.3230, device='cuda:0'), tensor(97.6930, device='cuda:0'), tensor(97.8057, device='cuda:0'), tensor(97.8405, device='cuda:0'), tensor(97.9508, device='cuda:0'), tensor(97.9959, device='cuda:0'), tensor(98.1925, device='cuda:0'), tensor(98.2361, device='cuda:0'), tensor(98.3152, device='cuda:0'), tensor(98.3016, device='cuda:0'), tensor(98.3060, device='cuda:0'), tensor(98.4671, device='cuda:0'), tensor(99.0417, device='cuda:0'), tensor(99.2855, device='cuda:0'), tensor(99.3167, device='cuda:0'), tensor(99.3606, device='cuda:0'), tensor(99.4266, device='cuda:0'), tensor(99.4473, device='cuda:0'), tensor(99.4485, device='cuda:0'), tensor(99.5205, device='cuda:0'), tensor(99.4513, device='cuda:0'), tensor(99.5640, device='cuda:0'), tensor(99.5452, device='cuda:0'), tensor(99.5404, device='cuda:0'), tensor(99.6044, device='cuda:0'), tensor(99.5844, device='cuda:0'), tensor(99.5944, device='cuda:0'), tensor(99.5984, device='cuda:0'), tensor(99.5684, device='cuda:0'), tensor(99.6244, device='cuda:0'), tensor(99.6683, device='cuda:0'), tensor(99.6703, device='cuda:0'), tensor(99.6951, device='cuda:0'), tensor(99.7143, device='cuda:0'), tensor(99.7630, device='cuda:0'), tensor(99.7582, device='cuda:0'), tensor(99.7682, device='cuda:0'), tensor(99.7570, device='cuda:0'), tensor(99.7702, device='cuda:0'), tensor(99.7822, device='cuda:0'), tensor(99.7922, device='cuda:0'), tensor(99.8082, device='cuda:0'), tensor(99.7762, device='cuda:0'), tensor(99.7842, device='cuda:0'), tensor(99.7602, device='cuda:0'), tensor(99.8062, device='cuda:0'), tensor(99.8062, device='cuda:0'), tensor(99.8022, device='cuda:0'), tensor(99.7902, device='cuda:0'), tensor(99.8362, device='cuda:0'), tensor(99.7962, device='cuda:0'), tensor(99.8182, device='cuda:0'), tensor(99.8170, device='cuda:0'), tensor(99.8382, device='cuda:0'), tensor(99.8010, device='cuda:0'), tensor(99.8170, device='cuda:0'), tensor(99.8429, device='cuda:0'), tensor(99.8302, device='cuda:0'), tensor(99.8322, device='cuda:0'), tensor(99.8401, device='cuda:0'), tensor(99.8030, device='cuda:0'), tensor(99.8202, device='cuda:0'), tensor(99.8461, device='cuda:0'), tensor(99.8581, device='cuda:0'), tensor(99.8350, device='cuda:0'), tensor(99.8421, device='cuda:0'), tensor(99.8302, device='cuda:0'), tensor(99.8302, device='cuda:0'), tensor(99.8421, device='cuda:0'), tensor(99.8601, device='cuda:0'), tensor(99.8581, device='cuda:0'), tensor(99.8362, device='cuda:0')]
DEBUG:root:test_loss_hist: [1.1562667066537882, 0.8159764220442953, 0.6958993409253373, 0.6448880317090433, 0.5798925474474702, 0.5274264665344094, 0.49763314595705344, 0.47428366881382616, 0.45393367658687545, 0.4333048815591426, 0.42766102054451083, 0.4370145254497287, 0.39385528334333925, 0.40192160802551463, 0.42307458365265327, 0.38125803859173496, 0.40889598976207686, 0.36088557711130453, 0.39137352512607093, 0.36870273721369007, 0.323555530249318, 0.3264485471233537, 0.33418163477997237, 0.3269127847839005, 0.3342062285806559, 0.3404132878478569, 0.3412265991674194, 0.3441375295949888, 0.349211700166328, 0.3568870047036606, 0.3630621742598618, 0.36678027248458017, 0.3608667970269541, 0.3616959437539306, 0.3837721841999247, 0.3912099952561946, 0.38093773850911783, 0.3744190671021425, 0.3747693220082718, 0.37835743815838535, 0.35653528165590914, 0.3621548947088326, 0.36775683272111265, 0.36597857199892214, 0.37154799209365363, 0.36474114741328395, 0.3691175984619539, 0.37717939314397075, 0.37600435806980614, 0.3797846486485457, 0.3799176000624518, 0.3905358368271514, 0.38229699998716765, 0.38774781127142, 0.38411202687251417, 0.38592464391943776, 0.38820184059912644, 0.3870319318545016, 0.38236835084949866, 0.38156306573861765, 0.3879277436887916, 0.38752580603844, 0.3860360069931308, 0.3852824010426485, 0.38832005410443377, 0.38707234191743634, 0.3893593375724328, 0.3872537208320219, 0.3894687592040134, 0.3888138899508911, 0.38781875334208527, 0.3888910799464093, 0.38500710972879504, 0.39010523410537573, 0.38682071058244644, 0.38698633241502545, 0.3929428250729283, 0.39132764944924586, 0.3896211131558388, 0.39272699929490873, 0.3925681508417371, 0.39219786434233944, 0.39110222265501565, 0.39205860841689233, 0.39057122015311746, 0.38994160935848576, 0.3912621593645102, 0.39251544703788394, 0.39209089041510714, 0.3926747934067551, 0.39373416802551175, 0.39236788083858126, 0.3934195348167721, 0.3936247807703441, 0.39181618845161004, 0.3919692809068704, 0.39289791816020314, 0.39322881145945077, 0.39320069636347926, 0.3941162174826936]
DEBUG:root:test_acc_hist: [tensor(58.6234, device='cuda:0'), tensor(72.2607, device='cuda:0'), tensor(75.3956, device='cuda:0'), tensor(77.7690, device='cuda:0'), tensor(80.3402, device='cuda:0'), tensor(82.1203, device='cuda:0'), tensor(82.9510, device='cuda:0'), tensor(84.0783, device='cuda:0'), tensor(84.5530, device='cuda:0'), tensor(85.1365, device='cuda:0'), tensor(85.5320, device='cuda:0'), tensor(85.3738, device='cuda:0'), tensor(86.7188, device='cuda:0'), tensor(86.7385, device='cuda:0'), tensor(85.9869, device='cuda:0'), tensor(87.5396, device='cuda:0'), tensor(86.8968, device='cuda:0'), tensor(88.0538, device='cuda:0'), tensor(87.1835, device='cuda:0'), tensor(88.1131, device='cuda:0'), tensor(89.2603, device='cuda:0'), tensor(89.4086, device='cuda:0'), tensor(89.4086, device='cuda:0'), tensor(89.8932, device='cuda:0'), tensor(89.9031, device='cuda:0'), tensor(89.6954, device='cuda:0'), tensor(89.8240, device='cuda:0'), tensor(89.6756, device='cuda:0'), tensor(89.9328, device='cuda:0'), tensor(89.3493, device='cuda:0'), tensor(89.6855, device='cuda:0'), tensor(89.6657, device='cuda:0'), tensor(89.8833, device='cuda:0'), tensor(89.8141, device='cuda:0'), tensor(89.5767, device='cuda:0'), tensor(88.7955, device='cuda:0'), tensor(89.6559, device='cuda:0'), tensor(89.7844, device='cuda:0'), tensor(89.6855, device='cuda:0'), tensor(89.8932, device='cuda:0'), tensor(90.3976, device='cuda:0'), tensor(90.3085, device='cuda:0'), tensor(90.4569, device='cuda:0'), tensor(90.4371, device='cuda:0'), tensor(90.2690, device='cuda:0'), tensor(90.4865, device='cuda:0'), tensor(90.5657, device='cuda:0'), tensor(90.2591, device='cuda:0'), tensor(90.4964, device='cuda:0'), tensor(90.3283, device='cuda:0'), tensor(90.2492, device='cuda:0'), tensor(90.1503, device='cuda:0'), tensor(90.4470, device='cuda:0'), tensor(90.1701, device='cuda:0'), tensor(90.3580, device='cuda:0'), tensor(90.2294, device='cuda:0'), tensor(90.3382, device='cuda:0'), tensor(90.2987, device='cuda:0'), tensor(90.4767, device='cuda:0'), tensor(90.3976, device='cuda:0'), tensor(90.1899, device='cuda:0'), tensor(90.3283, device='cuda:0'), tensor(90.2492, device='cuda:0'), tensor(90.2987, device='cuda:0'), tensor(90.3877, device='cuda:0'), tensor(90.1701, device='cuda:0'), tensor(90.1800, device='cuda:0'), tensor(90.3085, device='cuda:0'), tensor(90.3580, device='cuda:0'), tensor(90.3778, device='cuda:0'), tensor(90.4668, device='cuda:0'), tensor(90.4668, device='cuda:0'), tensor(90.5261, device='cuda:0'), tensor(90.3679, device='cuda:0'), tensor(90.3877, device='cuda:0'), tensor(90.3679, device='cuda:0'), tensor(90.1701, device='cuda:0'), tensor(90.2591, device='cuda:0'), tensor(90.2888, device='cuda:0'), tensor(90.1899, device='cuda:0'), tensor(90.2690, device='cuda:0'), tensor(90.2987, device='cuda:0'), tensor(90.3481, device='cuda:0'), tensor(90.2789, device='cuda:0'), tensor(90.3580, device='cuda:0'), tensor(90.3085, device='cuda:0'), tensor(90.3184, device='cuda:0'), tensor(90.3184, device='cuda:0'), tensor(90.2789, device='cuda:0'), tensor(90.2690, device='cuda:0'), tensor(90.2888, device='cuda:0'), tensor(90.2789, device='cuda:0'), tensor(90.3382, device='cuda:0'), tensor(90.3481, device='cuda:0'), tensor(90.4371, device='cuda:0'), tensor(90.3778, device='cuda:0'), tensor(90.3778, device='cuda:0'), tensor(90.2987, device='cuda:0'), tensor(90.3778, device='cuda:0'), tensor(90.3976, device='cuda:0')]
