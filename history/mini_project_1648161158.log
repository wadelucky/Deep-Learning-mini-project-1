DEBUG:root:number of params are 696618
DEBUG:root:epoch 0, train_loss 1.3918, train_accuracy 48.6501, test_loss 1.0985, test_accuracy 60.5222, cost time 15.2568
DEBUG:root:epoch 1, train_loss 0.9563, train_accuracy 66.0266, test_loss 0.9204, test_accuracy 67.3457, cost time 14.8782
DEBUG:root:epoch 2, train_loss 0.7739, train_accuracy 72.6367, test_loss 0.7914, test_accuracy 72.0827, cost time 14.8535
DEBUG:root:epoch 3, train_loss 0.6652, train_accuracy 76.6692, test_loss 0.6902, test_accuracy 75.9296, cost time 14.8859
DEBUG:root:epoch 4, train_loss 0.5844, train_accuracy 79.7095, test_loss 0.6491, test_accuracy 78.2041, cost time 14.8447
DEBUG:root:epoch 5, train_loss 0.5244, train_accuracy 81.7519, test_loss 0.5842, test_accuracy 80.0040, cost time 14.8771
DEBUG:root:epoch 6, train_loss 0.4778, train_accuracy 83.4871, test_loss 0.5305, test_accuracy 81.9818, cost time 14.9529
DEBUG:root:epoch 7, train_loss 0.4436, train_accuracy 84.7458, test_loss 0.5102, test_accuracy 82.5554, cost time 14.8741
DEBUG:root:epoch 8, train_loss 0.4099, train_accuracy 85.6718, test_loss 0.4890, test_accuracy 83.4553, cost time 14.8895
DEBUG:root:epoch 9, train_loss 0.3839, train_accuracy 86.8131, test_loss 0.4981, test_accuracy 82.9213, cost time 14.8490
DEBUG:root:epoch 10, train_loss 0.3559, train_accuracy 87.6758, test_loss 0.4583, test_accuracy 84.3453, cost time 14.8697
DEBUG:root:epoch 11, train_loss 0.3398, train_accuracy 88.2377, test_loss 0.4542, test_accuracy 84.5332, cost time 14.8555
DEBUG:root:epoch 12, train_loss 0.3117, train_accuracy 89.1612, test_loss 0.4460, test_accuracy 84.9980, cost time 14.8444
DEBUG:root:epoch 13, train_loss 0.2981, train_accuracy 89.6787, test_loss 0.4345, test_accuracy 85.6013, cost time 14.8595
DEBUG:root:epoch 14, train_loss 0.2799, train_accuracy 90.2350, test_loss 0.4133, test_accuracy 86.1353, cost time 14.8425
DEBUG:root:epoch 15, train_loss 0.2677, train_accuracy 90.7493, test_loss 0.4208, test_accuracy 85.9078, cost time 14.8517
DEBUG:root:epoch 16, train_loss 0.2463, train_accuracy 91.5213, test_loss 0.3919, test_accuracy 86.5407, cost time 14.8639
DEBUG:root:epoch 17, train_loss 0.2352, train_accuracy 91.7659, test_loss 0.4144, test_accuracy 86.3133, cost time 14.9571
DEBUG:root:epoch 18, train_loss 0.2213, train_accuracy 92.3014, test_loss 0.4207, test_accuracy 86.3133, cost time 14.9270
DEBUG:root:epoch 19, train_loss 0.2182, train_accuracy 92.4748, test_loss 0.4167, test_accuracy 86.2342, cost time 14.8639
DEBUG:root:epoch 20, train_loss 0.1992, train_accuracy 93.1598, test_loss 0.3945, test_accuracy 87.1539, cost time 14.8996
DEBUG:root:epoch 21, train_loss 0.1916, train_accuracy 93.3272, test_loss 0.3907, test_accuracy 86.8473, cost time 14.8996
DEBUG:root:epoch 22, train_loss 0.1789, train_accuracy 93.7288, test_loss 0.3985, test_accuracy 86.9957, cost time 14.8626
DEBUG:root:epoch 23, train_loss 0.1702, train_accuracy 94.0177, test_loss 0.3928, test_accuracy 87.1044, cost time 14.8872
DEBUG:root:epoch 24, train_loss 0.1620, train_accuracy 94.2851, test_loss 0.4036, test_accuracy 87.0352, cost time 14.8659
DEBUG:root:epoch 25, train_loss 0.1519, train_accuracy 94.7530, test_loss 0.4117, test_accuracy 87.1341, cost time 14.8287
DEBUG:root:epoch 26, train_loss 0.1421, train_accuracy 95.1143, test_loss 0.3924, test_accuracy 87.4604, cost time 14.8620
DEBUG:root:epoch 27, train_loss 0.1364, train_accuracy 95.3553, test_loss 0.4097, test_accuracy 87.3022, cost time 14.8645
DEBUG:root:epoch 28, train_loss 0.1293, train_accuracy 95.5283, test_loss 0.4008, test_accuracy 87.3319, cost time 14.8295
DEBUG:root:epoch 29, train_loss 0.1237, train_accuracy 95.7425, test_loss 0.4084, test_accuracy 87.5297, cost time 14.8340
DEBUG:root:epoch 30, train_loss 0.1184, train_accuracy 95.9223, test_loss 0.3889, test_accuracy 88.1032, cost time 14.8744
DEBUG:root:epoch 31, train_loss 0.1107, train_accuracy 96.3119, test_loss 0.4168, test_accuracy 87.1835, cost time 14.8512
DEBUG:root:epoch 32, train_loss 0.1048, train_accuracy 96.3807, test_loss 0.4042, test_accuracy 87.8659, cost time 14.9618
DEBUG:root:epoch 33, train_loss 0.1033, train_accuracy 96.4122, test_loss 0.4092, test_accuracy 87.7769, cost time 14.8586
DEBUG:root:epoch 34, train_loss 0.0970, train_accuracy 96.6069, test_loss 0.4206, test_accuracy 87.6187, cost time 14.8843
DEBUG:root:epoch 35, train_loss 0.0922, train_accuracy 96.8346, test_loss 0.4112, test_accuracy 87.9351, cost time 14.8450
DEBUG:root:epoch 36, train_loss 0.0857, train_accuracy 97.1743, test_loss 0.4085, test_accuracy 87.9055, cost time 14.8536
DEBUG:root:epoch 37, train_loss 0.0842, train_accuracy 97.1284, test_loss 0.4256, test_accuracy 87.3121, cost time 14.8741
DEBUG:root:epoch 38, train_loss 0.0774, train_accuracy 97.4481, test_loss 0.4182, test_accuracy 87.7373, cost time 14.8635
DEBUG:root:epoch 39, train_loss 0.0773, train_accuracy 97.3845, test_loss 0.4269, test_accuracy 87.8560, cost time 14.8662
DEBUG:root:epoch 40, train_loss 0.0728, train_accuracy 97.5312, test_loss 0.4205, test_accuracy 87.8956, cost time 14.8702
DEBUG:root:epoch 41, train_loss 0.0716, train_accuracy 97.5903, test_loss 0.4303, test_accuracy 88.0142, cost time 14.9047
DEBUG:root:epoch 42, train_loss 0.0659, train_accuracy 97.7410, test_loss 0.4285, test_accuracy 88.0637, cost time 14.8552
DEBUG:root:epoch 43, train_loss 0.0647, train_accuracy 97.8281, test_loss 0.4337, test_accuracy 87.7472, cost time 14.8704
DEBUG:root:epoch 44, train_loss 0.0610, train_accuracy 97.9508, test_loss 0.4294, test_accuracy 87.9154, cost time 14.9184
DEBUG:root:epoch 45, train_loss 0.0597, train_accuracy 98.0571, test_loss 0.4342, test_accuracy 87.8758, cost time 14.8921
DEBUG:root:epoch 46, train_loss 0.0578, train_accuracy 98.0435, test_loss 0.4367, test_accuracy 87.8461, cost time 14.8751
DEBUG:root:epoch 47, train_loss 0.0559, train_accuracy 98.1218, test_loss 0.4447, test_accuracy 87.6187, cost time 14.9034
DEBUG:root:epoch 48, train_loss 0.0529, train_accuracy 98.2541, test_loss 0.4319, test_accuracy 88.0736, cost time 14.8879
DEBUG:root:epoch 49, train_loss 0.0513, train_accuracy 98.3244, test_loss 0.4446, test_accuracy 87.6780, cost time 14.8465
DEBUG:root:epoch 50, train_loss 0.0484, train_accuracy 98.4823, test_loss 0.4424, test_accuracy 88.0044, cost time 14.8715
DEBUG:root:epoch 51, train_loss 0.0491, train_accuracy 98.4131, test_loss 0.4622, test_accuracy 87.3022, cost time 14.9288
DEBUG:root:epoch 52, train_loss 0.0471, train_accuracy 98.4922, test_loss 0.4539, test_accuracy 87.8758, cost time 14.8779
DEBUG:root:epoch 53, train_loss 0.0458, train_accuracy 98.5154, test_loss 0.4461, test_accuracy 87.8263, cost time 14.8890
DEBUG:root:epoch 54, train_loss 0.0457, train_accuracy 98.5318, test_loss 0.4494, test_accuracy 87.7868, cost time 14.8893
DEBUG:root:epoch 55, train_loss 0.0442, train_accuracy 98.6249, test_loss 0.4407, test_accuracy 88.1032, cost time 14.8586
DEBUG:root:epoch 56, train_loss 0.0421, train_accuracy 98.6721, test_loss 0.4432, test_accuracy 88.1527, cost time 14.8613
DEBUG:root:epoch 57, train_loss 0.0420, train_accuracy 98.6841, test_loss 0.4644, test_accuracy 87.5791, cost time 14.8871
DEBUG:root:epoch 58, train_loss 0.0399, train_accuracy 98.7200, test_loss 0.4567, test_accuracy 87.9846, cost time 14.9005
DEBUG:root:epoch 59, train_loss 0.0407, train_accuracy 98.7308, test_loss 0.4619, test_accuracy 87.9450, cost time 14.8872
DEBUG:root:epoch 60, train_loss 0.0378, train_accuracy 98.8775, test_loss 0.4621, test_accuracy 88.1329, cost time 14.8735
DEBUG:root:epoch 61, train_loss 0.0377, train_accuracy 98.7792, test_loss 0.4661, test_accuracy 87.9846, cost time 14.8802
DEBUG:root:epoch 62, train_loss 0.0367, train_accuracy 98.8911, test_loss 0.4653, test_accuracy 87.7670, cost time 14.8624
DEBUG:root:epoch 63, train_loss 0.0354, train_accuracy 98.9430, test_loss 0.4728, test_accuracy 87.8165, cost time 14.8926
DEBUG:root:epoch 64, train_loss 0.0365, train_accuracy 98.8479, test_loss 0.4729, test_accuracy 87.7373, cost time 14.8778
DEBUG:root:epoch 65, train_loss 0.0336, train_accuracy 98.9510, test_loss 0.4741, test_accuracy 87.8263, cost time 14.9116
DEBUG:root:epoch 66, train_loss 0.0324, train_accuracy 98.9802, test_loss 0.4733, test_accuracy 88.0142, cost time 14.8861
DEBUG:root:epoch 67, train_loss 0.0335, train_accuracy 98.9806, test_loss 0.4743, test_accuracy 87.7967, cost time 14.8906
DEBUG:root:epoch 68, train_loss 0.0327, train_accuracy 98.9910, test_loss 0.4737, test_accuracy 87.9252, cost time 14.9180
DEBUG:root:epoch 69, train_loss 0.0325, train_accuracy 99.0177, test_loss 0.4770, test_accuracy 87.8263, cost time 14.8840
DEBUG:root:epoch 70, train_loss 0.0313, train_accuracy 99.0717, test_loss 0.4781, test_accuracy 87.8857, cost time 14.8733
DEBUG:root:epoch 71, train_loss 0.0302, train_accuracy 99.1077, test_loss 0.4769, test_accuracy 87.8362, cost time 14.9023
DEBUG:root:epoch 72, train_loss 0.0283, train_accuracy 99.2076, test_loss 0.4738, test_accuracy 88.0241, cost time 14.8943
DEBUG:root:epoch 73, train_loss 0.0304, train_accuracy 99.0969, test_loss 0.4781, test_accuracy 87.8165, cost time 14.8560
DEBUG:root:epoch 74, train_loss 0.0291, train_accuracy 99.1916, test_loss 0.4791, test_accuracy 87.9154, cost time 14.8516
DEBUG:root:epoch 75, train_loss 0.0300, train_accuracy 99.1069, test_loss 0.4795, test_accuracy 87.8461, cost time 14.8715
DEBUG:root:epoch 76, train_loss 0.0291, train_accuracy 99.1504, test_loss 0.4823, test_accuracy 87.7176, cost time 14.8622
DEBUG:root:epoch 77, train_loss 0.0281, train_accuracy 99.2088, test_loss 0.4832, test_accuracy 87.7769, cost time 14.8547
DEBUG:root:epoch 78, train_loss 0.0286, train_accuracy 99.1696, test_loss 0.4855, test_accuracy 87.8263, cost time 14.8823
DEBUG:root:epoch 79, train_loss 0.0273, train_accuracy 99.2243, test_loss 0.4837, test_accuracy 87.8758, cost time 14.8455
DEBUG:root:epoch 80, train_loss 0.0274, train_accuracy 99.2064, test_loss 0.4813, test_accuracy 87.9450, cost time 14.8418
DEBUG:root:epoch 81, train_loss 0.0276, train_accuracy 99.2128, test_loss 0.4843, test_accuracy 87.9648, cost time 14.8737
DEBUG:root:epoch 82, train_loss 0.0275, train_accuracy 99.1868, test_loss 0.4829, test_accuracy 88.0835, cost time 14.8805
DEBUG:root:epoch 83, train_loss 0.0272, train_accuracy 99.1928, test_loss 0.4856, test_accuracy 87.8362, cost time 14.8789
DEBUG:root:epoch 84, train_loss 0.0268, train_accuracy 99.2635, test_loss 0.4807, test_accuracy 87.9154, cost time 14.8673
DEBUG:root:epoch 85, train_loss 0.0270, train_accuracy 99.2148, test_loss 0.4832, test_accuracy 87.9648, cost time 14.8721
DEBUG:root:epoch 86, train_loss 0.0257, train_accuracy 99.2647, test_loss 0.4807, test_accuracy 88.1032, cost time 14.8337
DEBUG:root:epoch 87, train_loss 0.0261, train_accuracy 99.2691, test_loss 0.4841, test_accuracy 88.0439, cost time 14.8393
DEBUG:root:epoch 88, train_loss 0.0260, train_accuracy 99.2987, test_loss 0.4850, test_accuracy 88.0241, cost time 14.8356
DEBUG:root:epoch 89, train_loss 0.0260, train_accuracy 99.2995, test_loss 0.4863, test_accuracy 87.9450, cost time 14.8494
DEBUG:root:epoch 90, train_loss 0.0255, train_accuracy 99.2795, test_loss 0.4854, test_accuracy 87.9549, cost time 14.8391
DEBUG:root:epoch 91, train_loss 0.0261, train_accuracy 99.2695, test_loss 0.4879, test_accuracy 87.9055, cost time 14.8294
DEBUG:root:epoch 92, train_loss 0.0248, train_accuracy 99.2707, test_loss 0.4889, test_accuracy 87.8263, cost time 14.8547
DEBUG:root:epoch 93, train_loss 0.0243, train_accuracy 99.3466, test_loss 0.4878, test_accuracy 87.8461, cost time 14.8221
DEBUG:root:epoch 94, train_loss 0.0247, train_accuracy 99.3015, test_loss 0.4861, test_accuracy 88.0241, cost time 14.8250
DEBUG:root:epoch 95, train_loss 0.0254, train_accuracy 99.2555, test_loss 0.4874, test_accuracy 87.8857, cost time 14.8184
DEBUG:root:epoch 96, train_loss 0.0250, train_accuracy 99.3214, test_loss 0.4858, test_accuracy 87.7868, cost time 14.8323
DEBUG:root:epoch 97, train_loss 0.0242, train_accuracy 99.2803, test_loss 0.4881, test_accuracy 87.9747, cost time 14.8225
DEBUG:root:epoch 98, train_loss 0.0250, train_accuracy 99.2755, test_loss 0.4866, test_accuracy 87.9747, cost time 14.8150
DEBUG:root:epoch 99, train_loss 0.0248, train_accuracy 99.2687, test_loss 0.4882, test_accuracy 87.8857, cost time 14.8420
DEBUG:root:ResNet(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (avg_pool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (linear): Linear(in_features=128, out_features=10, bias=True)
)
DEBUG:root:train_loss_hist: [1.3917777907208104, 0.956336284385008, 0.773902164700696, 0.6651700536918153, 0.5843847820063686, 0.5243884820462493, 0.4777846007091005, 0.4435749242982596, 0.40991232420324974, 0.38388081096932103, 0.35593334739775306, 0.33984669966770864, 0.31169083314326107, 0.2981199197223424, 0.2798978834582107, 0.26768173220212504, 0.24629800511366876, 0.23522717966829115, 0.22132633933249643, 0.218211253795325, 0.19922705168080757, 0.19155364603642613, 0.17885995090312665, 0.1702256477092538, 0.16196809048809663, 0.1518983533963218, 0.14212274551391602, 0.13641688019951895, 0.12926754179170064, 0.1236989385808063, 0.11840727296479218, 0.11069038971458249, 0.10476369865219612, 0.10331892975798958, 0.09697724723011789, 0.09224055468312005, 0.08570969671658847, 0.08418893357715033, 0.07741513774227685, 0.07726780981149363, 0.07279439028971793, 0.0716188851782047, 0.0659177142821843, 0.06471134868243238, 0.06104839940929352, 0.0596629205371832, 0.05783457391659546, 0.05586587570731521, 0.05285527844153478, 0.0512649594375011, 0.04844276376706941, 0.04910262584057458, 0.047124803690311245, 0.04575922267983103, 0.04574038194197104, 0.04420759288541725, 0.04211126513841093, 0.041980717154910495, 0.039894135591462064, 0.040721116965050666, 0.03776927095244798, 0.03770177783635076, 0.03668552611613898, 0.03540767178349102, 0.036489374162700705, 0.03364136076086889, 0.03240187728272565, 0.03345635083868452, 0.03273718579269736, 0.0325333973728692, 0.03132418057788402, 0.030246830677561214, 0.028290967764261432, 0.030380944782139166, 0.02909325873669799, 0.029965740752399272, 0.029088902794529716, 0.02811683018875244, 0.028592318425650524, 0.027340030676358953, 0.027420604477643662, 0.02758003846692193, 0.027531217298973017, 0.027210851307110408, 0.026807160936105433, 0.027025700927904957, 0.025658808240686042, 0.02612327291425365, 0.025955700703189158, 0.026016846024062092, 0.02547994666659009, 0.02606937606506945, 0.024788287062140757, 0.02429255830895756, 0.024696604881073583, 0.02538405746207251, 0.025044919795516277, 0.02420113534283112, 0.02498467503320378, 0.024751178593948826] 
DEBUG:root:train_acc_hist: [tensor(48.6501, device='cuda:0'), tensor(66.0266, device='cuda:0'), tensor(72.6367, device='cuda:0'), tensor(76.6692, device='cuda:0'), tensor(79.7095, device='cuda:0'), tensor(81.7519, device='cuda:0'), tensor(83.4871, device='cuda:0'), tensor(84.7458, device='cuda:0'), tensor(85.6718, device='cuda:0'), tensor(86.8131, device='cuda:0'), tensor(87.6758, device='cuda:0'), tensor(88.2377, device='cuda:0'), tensor(89.1612, device='cuda:0'), tensor(89.6787, device='cuda:0'), tensor(90.2350, device='cuda:0'), tensor(90.7493, device='cuda:0'), tensor(91.5213, device='cuda:0'), tensor(91.7659, device='cuda:0'), tensor(92.3014, device='cuda:0'), tensor(92.4748, device='cuda:0'), tensor(93.1598, device='cuda:0'), tensor(93.3272, device='cuda:0'), tensor(93.7288, device='cuda:0'), tensor(94.0177, device='cuda:0'), tensor(94.2851, device='cuda:0'), tensor(94.7530, device='cuda:0'), tensor(95.1143, device='cuda:0'), tensor(95.3553, device='cuda:0'), tensor(95.5283, device='cuda:0'), tensor(95.7425, device='cuda:0'), tensor(95.9223, device='cuda:0'), tensor(96.3119, device='cuda:0'), tensor(96.3807, device='cuda:0'), tensor(96.4122, device='cuda:0'), tensor(96.6069, device='cuda:0'), tensor(96.8346, device='cuda:0'), tensor(97.1743, device='cuda:0'), tensor(97.1284, device='cuda:0'), tensor(97.4481, device='cuda:0'), tensor(97.3845, device='cuda:0'), tensor(97.5312, device='cuda:0'), tensor(97.5903, device='cuda:0'), tensor(97.7410, device='cuda:0'), tensor(97.8281, device='cuda:0'), tensor(97.9508, device='cuda:0'), tensor(98.0571, device='cuda:0'), tensor(98.0435, device='cuda:0'), tensor(98.1218, device='cuda:0'), tensor(98.2541, device='cuda:0'), tensor(98.3244, device='cuda:0'), tensor(98.4823, device='cuda:0'), tensor(98.4131, device='cuda:0'), tensor(98.4922, device='cuda:0'), tensor(98.5154, device='cuda:0'), tensor(98.5318, device='cuda:0'), tensor(98.6249, device='cuda:0'), tensor(98.6721, device='cuda:0'), tensor(98.6841, device='cuda:0'), tensor(98.7200, device='cuda:0'), tensor(98.7308, device='cuda:0'), tensor(98.8775, device='cuda:0'), tensor(98.7792, device='cuda:0'), tensor(98.8911, device='cuda:0'), tensor(98.9430, device='cuda:0'), tensor(98.8479, device='cuda:0'), tensor(98.9510, device='cuda:0'), tensor(98.9802, device='cuda:0'), tensor(98.9806, device='cuda:0'), tensor(98.9910, device='cuda:0'), tensor(99.0177, device='cuda:0'), tensor(99.0717, device='cuda:0'), tensor(99.1077, device='cuda:0'), tensor(99.2076, device='cuda:0'), tensor(99.0969, device='cuda:0'), tensor(99.1916, device='cuda:0'), tensor(99.1069, device='cuda:0'), tensor(99.1504, device='cuda:0'), tensor(99.2088, device='cuda:0'), tensor(99.1696, device='cuda:0'), tensor(99.2243, device='cuda:0'), tensor(99.2064, device='cuda:0'), tensor(99.2128, device='cuda:0'), tensor(99.1868, device='cuda:0'), tensor(99.1928, device='cuda:0'), tensor(99.2635, device='cuda:0'), tensor(99.2148, device='cuda:0'), tensor(99.2647, device='cuda:0'), tensor(99.2691, device='cuda:0'), tensor(99.2987, device='cuda:0'), tensor(99.2995, device='cuda:0'), tensor(99.2795, device='cuda:0'), tensor(99.2695, device='cuda:0'), tensor(99.2707, device='cuda:0'), tensor(99.3466, device='cuda:0'), tensor(99.3015, device='cuda:0'), tensor(99.2555, device='cuda:0'), tensor(99.3214, device='cuda:0'), tensor(99.2803, device='cuda:0'), tensor(99.2755, device='cuda:0'), tensor(99.2687, device='cuda:0')]
DEBUG:root:test_loss_hist: [1.0984665147865875, 0.9204433213306379, 0.7914255555671982, 0.6901946939245055, 0.6490651263466364, 0.5842476264585422, 0.5305443043950238, 0.5102147301541099, 0.4889862073373191, 0.49808952061435846, 0.45829587024223956, 0.4542116847219346, 0.44603831066360955, 0.4345254775466798, 0.4133352931541733, 0.420821146119999, 0.39191911246957656, 0.4144272449650342, 0.42066419916816905, 0.4166829689771314, 0.39448749472068834, 0.3906719982624054, 0.3984605296503139, 0.39281789430334596, 0.40359761518768117, 0.41165512460696546, 0.3924434269908108, 0.40965906558912013, 0.4008377960211114, 0.4083712783795369, 0.3889063366606266, 0.41677385644067694, 0.4042286887953553, 0.4091539722454699, 0.4205703648585307, 0.4112275533283813, 0.40849455078191393, 0.4256009365184398, 0.41820130468923833, 0.4269372756722607, 0.4204979471013516, 0.4302572296767295, 0.428467526088787, 0.43372564923159684, 0.4294386219374741, 0.43418819391274754, 0.4367475324793707, 0.4447490638947185, 0.431868838358529, 0.44457442615228365, 0.4424000223980674, 0.4621554897933067, 0.4538731212857403, 0.4460753355222412, 0.44939189187333556, 0.4407021822054175, 0.44318879046772097, 0.46436736591254607, 0.4566610317818726, 0.46188675470744506, 0.4620657906502108, 0.4661111939179746, 0.4652701571017881, 0.472820773532119, 0.4729406354548056, 0.4741190030604978, 0.4733374897815004, 0.47427627085884916, 0.47368306600594823, 0.4769902227422859, 0.4780536989999723, 0.4769148760581318, 0.4737835943321638, 0.4781343912399268, 0.47908927009829994, 0.4794958744999729, 0.48228498199318026, 0.48323103917550436, 0.4855487550361247, 0.4837004930912694, 0.48125306394281264, 0.4843437869714785, 0.4828599695163437, 0.48557375654389584, 0.48070950032789495, 0.4832171859997737, 0.48071628431730634, 0.4841157065916665, 0.48499276234379296, 0.48631041148040866, 0.48536724738682374, 0.4879493636043766, 0.48889104097704345, 0.48783766035037707, 0.4861014773951301, 0.4873992146193227, 0.4857505829651145, 0.48814989928203295, 0.4866238047805014, 0.48823060000999063]
DEBUG:root:test_acc_hist: [tensor(60.5222, device='cuda:0'), tensor(67.3457, device='cuda:0'), tensor(72.0827, device='cuda:0'), tensor(75.9296, device='cuda:0'), tensor(78.2041, device='cuda:0'), tensor(80.0040, device='cuda:0'), tensor(81.9818, device='cuda:0'), tensor(82.5554, device='cuda:0'), tensor(83.4553, device='cuda:0'), tensor(82.9213, device='cuda:0'), tensor(84.3453, device='cuda:0'), tensor(84.5332, device='cuda:0'), tensor(84.9980, device='cuda:0'), tensor(85.6013, device='cuda:0'), tensor(86.1353, device='cuda:0'), tensor(85.9078, device='cuda:0'), tensor(86.5407, device='cuda:0'), tensor(86.3133, device='cuda:0'), tensor(86.3133, device='cuda:0'), tensor(86.2342, device='cuda:0'), tensor(87.1539, device='cuda:0'), tensor(86.8473, device='cuda:0'), tensor(86.9957, device='cuda:0'), tensor(87.1044, device='cuda:0'), tensor(87.0352, device='cuda:0'), tensor(87.1341, device='cuda:0'), tensor(87.4604, device='cuda:0'), tensor(87.3022, device='cuda:0'), tensor(87.3319, device='cuda:0'), tensor(87.5297, device='cuda:0'), tensor(88.1032, device='cuda:0'), tensor(87.1835, device='cuda:0'), tensor(87.8659, device='cuda:0'), tensor(87.7769, device='cuda:0'), tensor(87.6187, device='cuda:0'), tensor(87.9351, device='cuda:0'), tensor(87.9055, device='cuda:0'), tensor(87.3121, device='cuda:0'), tensor(87.7373, device='cuda:0'), tensor(87.8560, device='cuda:0'), tensor(87.8956, device='cuda:0'), tensor(88.0142, device='cuda:0'), tensor(88.0637, device='cuda:0'), tensor(87.7472, device='cuda:0'), tensor(87.9154, device='cuda:0'), tensor(87.8758, device='cuda:0'), tensor(87.8461, device='cuda:0'), tensor(87.6187, device='cuda:0'), tensor(88.0736, device='cuda:0'), tensor(87.6780, device='cuda:0'), tensor(88.0044, device='cuda:0'), tensor(87.3022, device='cuda:0'), tensor(87.8758, device='cuda:0'), tensor(87.8263, device='cuda:0'), tensor(87.7868, device='cuda:0'), tensor(88.1032, device='cuda:0'), tensor(88.1527, device='cuda:0'), tensor(87.5791, device='cuda:0'), tensor(87.9846, device='cuda:0'), tensor(87.9450, device='cuda:0'), tensor(88.1329, device='cuda:0'), tensor(87.9846, device='cuda:0'), tensor(87.7670, device='cuda:0'), tensor(87.8165, device='cuda:0'), tensor(87.7373, device='cuda:0'), tensor(87.8263, device='cuda:0'), tensor(88.0142, device='cuda:0'), tensor(87.7967, device='cuda:0'), tensor(87.9252, device='cuda:0'), tensor(87.8263, device='cuda:0'), tensor(87.8857, device='cuda:0'), tensor(87.8362, device='cuda:0'), tensor(88.0241, device='cuda:0'), tensor(87.8165, device='cuda:0'), tensor(87.9154, device='cuda:0'), tensor(87.8461, device='cuda:0'), tensor(87.7176, device='cuda:0'), tensor(87.7769, device='cuda:0'), tensor(87.8263, device='cuda:0'), tensor(87.8758, device='cuda:0'), tensor(87.9450, device='cuda:0'), tensor(87.9648, device='cuda:0'), tensor(88.0835, device='cuda:0'), tensor(87.8362, device='cuda:0'), tensor(87.9154, device='cuda:0'), tensor(87.9648, device='cuda:0'), tensor(88.1032, device='cuda:0'), tensor(88.0439, device='cuda:0'), tensor(88.0241, device='cuda:0'), tensor(87.9450, device='cuda:0'), tensor(87.9549, device='cuda:0'), tensor(87.9055, device='cuda:0'), tensor(87.8263, device='cuda:0'), tensor(87.8461, device='cuda:0'), tensor(88.0241, device='cuda:0'), tensor(87.8857, device='cuda:0'), tensor(87.7868, device='cuda:0'), tensor(87.9747, device='cuda:0'), tensor(87.9747, device='cuda:0'), tensor(87.8857, device='cuda:0')]
